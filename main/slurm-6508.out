/bin/bash: /data/apps/miniconda3/24.9.2/lib/libtinfo.so.6: no version information available (required by /bin/bash)
/data/home/scyb035/.conda/envs/zyf/lib/python3.8/site-packages/deepspeed/runtime/zero/linear.py:45: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.
  def forward(ctx, input, weight, bias=None):
/data/home/scyb035/.conda/envs/zyf/lib/python3.8/site-packages/deepspeed/runtime/zero/linear.py:71: FutureWarning: `torch.cuda.amp.custom_bwd(args...)` is deprecated. Please use `torch.amp.custom_bwd(args..., device_type='cuda')` instead.
  def backward(ctx, grad_output):
/data/home/scyb035/.conda/envs/zyf/lib/python3.8/site-packages/pydantic/_internal/_config.py:341: UserWarning: Valid config keys have changed in V2:
* 'allow_population_by_field_name' has been renamed to 'populate_by_name'
* 'validate_all' has been renamed to 'validate_default'
  warnings.warn(message, UserWarning)
/data/home/scyb035/.conda/envs/zyf/lib/python3.8/site-packages/pydantic/_internal/_fields.py:132: UserWarning: Field "model_persistence_threshold" in DeepSpeedZeroConfig has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(
/data/home/scyb035/.conda/envs/zyf/lib/python3.8/site-packages/pydantic/_internal/_config.py:341: UserWarning: Valid config keys have changed in V2:
* 'validate_all' has been renamed to 'validate_default'
  warnings.warn(message, UserWarning)
Loading model weights from /data/home/scyb035/zhangyufei/datasets/train_result/diff_t36_250117/99.pth...
main.py:98: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  model.load_state_dict(torch.load(args.resume))
Traceback (most recent call last):
  File "main.py", line 98, in <module>
    model.load_state_dict(torch.load(args.resume))
  File "/data/home/scyb035/.conda/envs/zyf/lib/python3.8/site-packages/torch/nn/modules/module.py", line 2166, in load_state_dict
    raise TypeError(f"Expected state_dict to be dict-like, got {type(state_dict)}.")
TypeError: Expected state_dict to be dict-like, got <class 'torch.nn.parallel.data_parallel.DataParallel'>.
